import{_ as n,g as s}from"./app.a39ec552.js";const a={},e=s(`<h1 id="layout" tabindex="-1"><a class="header-anchor" href="#layout" aria-hidden="true">#</a> Layout</h1><h2 id="layoutitem" tabindex="-1"><a class="header-anchor" href="#layoutitem" aria-hidden="true">#</a> LayoutItem</h2><p>Properties <strong>allowChildOverride</strong> and <strong>isParentOverride</strong> in <strong>LayoutItem</strong> are removed from Omnia 7.0. No alternative properties will be provided.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">LayoutItem</span> <span class="token punctuation">{</span>
    allowChildOverride<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// Removed from 7.0</span>
    isParentOverride<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// Removed from 7.0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="block-settings-reader" tabindex="-1"><a class="header-anchor" href="#block-settings-reader" aria-hidden="true">#</a> Block settings reader</h2><p><strong>BlockSettingsReaderOptions</strong> will no longer have <strong>editElement</strong> property to identify block setting web components. Instead of relying on element selector, the model will now require <strong>editElementManifestId</strong> which is block setting manifest id.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">BlockSettingsReaderOptions<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    editElement<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token comment">// Removed from 7.0</span>
    editElementManifestId<span class="token operator">?</span><span class="token operator">:</span> GuidValue<span class="token punctuation">;</span> <span class="token comment">// Use this instead</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>For example</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> BlockSettingsReader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@omnia/fx/ux&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// this is the old way to identify block setting web component</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">BlockSettingsReader</span></span><span class="token operator">&lt;</span>AccordionBlockSettings<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    defaultValue<span class="token operator">:</span> AccordionConfigurationFactory<span class="token punctuation">.</span><span class="token function">defaultSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    editElement<span class="token operator">:</span> <span class="token string">&quot;wcm-accordion-settings&quot;</span> <span class="token comment">// deprecated property</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// the new way requires manifest id of the web component</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">BlockSettingsReader</span></span><span class="token operator">&lt;</span>AccordionBlockSettings<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    defaultValue<span class="token operator">:</span> AccordionConfigurationFactory<span class="token punctuation">.</span><span class="token function">defaultSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    editElementManifestId<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Guid</span><span class="token punctuation">(</span><span class="token string">&quot;224BC52E-F18F-4CC5-B201-35857D4D8745&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>The manifest that contains block setting web component does not change anything but you can see the reference. Before you need to provide <strong>elementName</strong> to <strong>BlockSettingsReader</strong> but now is manifest id.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Composer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@omnia/tooling/composers&quot;</span><span class="token punctuation">;</span>

Composer
    <span class="token punctuation">.</span><span class="token function">registerManifest</span><span class="token punctuation">(</span>
        <span class="token comment">// same value for editElementManifestId in BlockSettingReader</span>
        <span class="token keyword">new</span> <span class="token class-name">Guid</span><span class="token punctuation">(</span><span class="token string">&quot;224BC52E-F18F-4CC5-B201-35857D4D8745&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&quot;wcm.accordion.settings&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">registerWebComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token comment">// same value for editElement property in BlockSettingsReader</span>
        elementName<span class="token operator">:</span> <span class="token string">&quot;wcm-accordion-settings&quot;</span><span class="token punctuation">,</span>
        entryPoint<span class="token operator">:</span> <span class="token string">&quot;./AccordionSettingsComponent.tsx&quot;</span><span class="token punctuation">,</span>
        typings<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./IAccordionSettingsComponent.ts&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,11);function t(p,o){return e}var r=n(a,[["render",t],["__file","layout.html.vue"]]);export{r as default};
