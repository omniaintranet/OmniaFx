import{_ as o,r as i,o as a,e as s,f as e,c as r,F as l,a as n,g as d}from"./app.a39ec552.js";const c={},p=e("h1",{id:"deploy-an-extension",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#deploy-an-extension","aria-hidden":"true"},"#"),n(" Deploy an extension")],-1),u=e("p",null,[n("Time to "),e("strong",null,"'Ship it'"),n("!")],-1),h=e("p",null,"In this part of tutorial, you will deploy an extension to your tenant",-1),x=n("Note: Please make sure you've installed "),m={href:"https://github.com/preciofishbone/OmniaFx/tree/master/docs/tutorials/getting-started#docker",target:"_blank",rel:"noopener noreferrer"},v=n("Docker"),b=n(" and been running it"),g=d(`<blockquote><p>Note: The following example will continue what you have done in <a href="../call-web-api#call-a-web-api">Call a Web API</a> so make sure you&#39;ve been through it.</p></blockquote><h1 id="step-1-registers-a-new-extension-in-omnia-cloud" tabindex="-1"><a class="header-anchor" href="#step-1-registers-a-new-extension-in-omnia-cloud" aria-hidden="true">#</a> Step 1. Registers a new extension in Omnia Cloud</h1><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>omnia extensions new --name &quot;HelloOmniaFx&quot;  --id extension-id
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>Tip: You can find the <code>extension-id</code> defined in <code>extension.json</code> file in the project</p></blockquote><blockquote><p>Tip: You only need to do this once for each extension</p></blockquote><h1 id="step-2-publish-a-new-version-of-extension" tabindex="-1"><a class="header-anchor" href="#step-2-publish-a-new-version-of-extension" aria-hidden="true">#</a> Step 2. Publish a new version of extension</h1><p>In this example, use version <code>1.0.0</code> for this completely new extension</p><p>In a basic deployment scenario, you should prepare a <a href="../../../cli#versioning-reference">version</a> to be published</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>omnia dev publish --path C:\\your-hello-omnia-fx-path\\extension.json --version 1.0.0
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>Tip: For more publishing options visit <a href="../../../cli#omnia-dev-publish">omnia dev publish</a></p></blockquote><h1 id="step-3-push-a-new-version-to-omnia-cloud" tabindex="-1"><a class="header-anchor" href="#step-3-push-a-new-version-to-omnia-cloud" aria-hidden="true">#</a> Step 3. Push a new version to Omnia Cloud</h1><p>Check what intent your tenant has been provisioned with. It could be <code>dev</code> or <code>prod</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>omnia tenants list
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Now you can push the pulished version to Omnia Cloud</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>omnia extensions push {extension-id}:1.0.0 --intent {dev or prod}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>Tip: For more pushing options visit <a href="../../../cli#omnia-extensions-push">omnia extensions push</a></p></blockquote><h1 id="step-4-deploy-a-new-version-to-your-tenant" tabindex="-1"><a class="header-anchor" href="#step-4-deploy-a-new-version-to-your-tenant" aria-hidden="true">#</a> Step 4. Deploy a new version to your tenant</h1><p>Get all available versions of the extension on Omnia Cloud</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>omnia extensions versions {extension-id}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Choose which version you want to deploy your tenant</p><p>In this example, use version <code>1.0.0</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>omnia extensions deploy {extension-id}:1.0.0 --tenantid {tenant-id}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h1 id="step-5-test-the-result" tabindex="-1"><a class="header-anchor" href="#step-5-test-the-result" aria-hidden="true">#</a> Step 5. Test the result</h1><h2 id="if-you-are-serving-the-extension-locally-in-the-previous-step-in-this-tutorial-you-will-need-to-stop-it-first" tabindex="-1"><a class="header-anchor" href="#if-you-are-serving-the-extension-locally-in-the-previous-step-in-this-tutorial-you-will-need-to-stop-it-first" aria-hidden="true">#</a> If you are serving the extension locally in the <a href="../create-extension#step-5-serve-the-extension-locally">previous step</a> in this tutorial, you will need to stop it first.</h2><p>To stop service, open <code>Omnia Developer Console</code> in your Omnia Developing site and run the following cmd:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>serve --stop https://localhost:44315
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Now you can test the result.</p><p>Enjoy!</p><h1 id="next-part" tabindex="-1"><a class="header-anchor" href="#next-part" aria-hidden="true">#</a> Next Part</h1><ul><li><a href="../create-omnia-block#create-an-omnia-block">Create an Omnia block</a></li></ul>`,30);function f(y,_){const t=i("ExternalLinkIcon");return a(),s(l,null,[p,u,h,e("blockquote",null,[e("p",null,[x,e("a",m,[v,r(t)]),b])]),g],64)}var k=o(c,[["render",f],["__file","index.html.vue"]]);export{k as default};
