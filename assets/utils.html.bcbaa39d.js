import{_ as n,g as s}from"./app.a39ec552.js";const a={},e=s(`<h1 id="utils" tabindex="-1"><a class="header-anchor" href="#utils" aria-hidden="true">#</a> Utils</h1><h2 id="registerscrollpaging" tabindex="-1"><a class="header-anchor" href="#registerscrollpaging" aria-hidden="true">#</a> registerScrollPaging</h2><p>Function <strong>registerScrollPaging</strong> is removed from this release. An alternative function is provided to control scrolling behaviour.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ScrollPagingUtils <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@omnia/fx&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// no longer available from 7.0</span>
ScrollPagingUtils<span class="token punctuation">.</span><span class="token function">registerScrollPaging</span><span class="token punctuation">(</span><span class="token comment">/*parameters*/</span><span class="token punctuation">)</span>

<span class="token comment">// use this function instead</span>
ScrollPagingUtils<span class="token punctuation">.</span><span class="token function">registerScrollPagingWithDefaultScrollWrapper</span><span class="token punctuation">(</span><span class="token comment">/*parameters*/</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Compare to deprecated function <strong>registerScrollPaging</strong>. New function <strong>registerScrollPagingWithDefaultScrollWrapper</strong> will not require scroll element selector parameter, also an optional function to handle scroll event listener being destroyed.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// deprecated function</span>
<span class="token keyword">function</span> <span class="token function">registerScrollPaging</span><span class="token punctuation">(</span>
    elem<span class="token operator">:</span> HTMLElement<span class="token punctuation">,</span>
    <span class="token comment">// require scroll element selector</span>
    scrollElemSelector<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    <span class="token function-variable function">nextPage</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span>

<span class="token comment">// new function</span>
<span class="token keyword">function</span> <span class="token function">registerScrollPagingWithDefaultScrollWrapper</span><span class="token punctuation">(</span>
    elem<span class="token operator">:</span> HTMLElement<span class="token punctuation">,</span>
    <span class="token function-variable function">nextPage</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token comment">// optional unregister handler when scroll event destroyed</span>
    onUnregister<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,6);function t(p,o){return e}var r=n(a,[["render",t],["__file","utils.html.vue"]]);export{r as default};
