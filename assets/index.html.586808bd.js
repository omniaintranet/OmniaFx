import{_ as t,r as p,o,e as c,f as n,c as e,F as l,g as r,a}from"./app.a39ec552.js";const i={},u=r(`<h1 id="create-a-feature" tabindex="-1"><a class="header-anchor" href="#create-a-feature" aria-hidden="true">#</a> Create a Feature</h1><p>In this part of tutorial, you will create a feature that create an aspx page on SharePoint Team Site.</p><blockquote><p>Tip: Please make sure you have set up <a href="../create-timer-job#create-a-worker-service">worker service</a>.</p></blockquote><h1 id="step-1-create-a-feature-in-worker" tabindex="-1"><a class="header-anchor" href="#step-1-create-a-feature-in-worker" aria-hidden="true">#</a> Step 1. Create a Feature in worker</h1><p>Create a new folder called <code>Features</code> under <code>..\\HelloOmniaFx.Worker\\</code>.</p><p>Inside the newly created folder, run the following cmd:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>omnia dev new spfeature --name HelloOmniaFxFeature
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>There are 2 files will be created:</p><p><code>..\\HelloOmniaFx.Worker\\Features\\HelloOmniaFxFeature.cs</code></p><p><code>..\\HelloOmniaFx.Worker\\Features\\HelloOmniaFxFeature.manifest.ts</code></p><p>Follow the instruction written in <code>HelloOmniaFxFeature.cs</code>:</p><ul><li>Update the namespace of the file:</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">namespace</span> HelloOmniaFx<span class="token punctuation">.</span>Worker<span class="token punctuation">.</span>Features
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>Install nuget package: Omnia.Fx.NetCore.SharePoint.</p></li><li><p>Add the configuration code in <code>..\\HelloOmniaFx.Worker\\Program.cs</code>:</p></li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>omniaConfig<span class="token punctuation">.</span><span class="token function">AddOmniaFxWorker</span><span class="token punctuation">(</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span><span class="token function">AddFeatureHandlers</span><span class="token punctuation">(</span><span class="token punctuation">(</span>featureProviderOptions<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        featureProviderOptions<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddFeatureProvider</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>HelloOmniaFxFeature<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
omniaConfig<span class="token punctuation">.</span><span class="token function">AddOmniaFxNetCoreSharePoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>Add code to provision aspx file on to SharePoint site:</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">ActivateOrUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> spUrl <span class="token operator">=</span> AppInstance<span class="token punctuation">.</span>Properties<span class="token punctuation">.</span>ContextParams<span class="token punctuation">.</span><span class="token function">EnsureContextParamStringValue</span><span class="token punctuation">(</span>Omnia<span class="token punctuation">.</span>Fx<span class="token punctuation">.</span>SharePoint<span class="token punctuation">.</span>Constants<span class="token punctuation">.</span>Parameters<span class="token punctuation">.</span>SPUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> ctx <span class="token operator">=</span> SharePointClientContextProvider<span class="token punctuation">.</span><span class="token function">CreateClientContext</span><span class="token punctuation">(</span>spUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//ctx.Load(ctx.Web);</span>
    <span class="token comment">//await ctx.ExecuteQueryAsync();</span>

    <span class="token class-name"><span class="token keyword">var</span></span> sitePageList <span class="token operator">=</span> ctx<span class="token punctuation">.</span>Web<span class="token punctuation">.</span><span class="token function">GetList</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>ServerRelativeUrl <span class="token operator">+</span> <span class="token string">&quot;/SitePages&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> pageRelativeUrl <span class="token operator">=</span> ctx<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>ServerRelativeUrl <span class="token operator">+</span> <span class="token string">&quot;/SitePages/HelloOmniaFx.aspx&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> ctx<span class="token punctuation">.</span>Web<span class="token punctuation">.</span><span class="token function">GetFileByServerRelativeUrl</span><span class="token punctuation">(</span>pageRelativeUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>f <span class="token operator">=&gt;</span> f<span class="token punctuation">.</span>Exists<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">ExecuteQueryAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>page<span class="token punctuation">.</span>Exists<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ListItem</span> item <span class="token operator">=</span> sitePageList<span class="token punctuation">.</span>RootFolder<span class="token punctuation">.</span>Files<span class="token punctuation">.</span><span class="token function">AddTemplateFile</span><span class="token punctuation">(</span>pageRelativeUrl<span class="token punctuation">,</span> TemplateFileType<span class="token punctuation">.</span>StandardPage<span class="token punctuation">)</span><span class="token punctuation">.</span>ListItemAllFields<span class="token punctuation">;</span>
        <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">ExecuteQueryAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h1 id="step-2-deploy" tabindex="-1"><a class="header-anchor" href="#step-2-deploy" aria-hidden="true">#</a> Step 2. Deploy</h1><p><a href="../deploy-extension#deploy-an-extension">Deploy the extension</a> to your dev tenant.</p><p>Try to activate the feature on a Teamwork app.</p><h1 id="step-3-debug" tabindex="-1"><a class="header-anchor" href="#step-3-debug" aria-hidden="true">#</a> Step 3. Debug</h1><p>Now, You might notice that the sample feature is activated failed. So you need to debug and fix it!</p><p>Disable the worker that running on cloud server so that the local worker can pick up the activation queue messages.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>omnia extensions scale {worker-service-id} --tenantid {tenant-id} --replicas 0	
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>Tip: You can find the <code>worker-service-id</code> defined in <code>..\\HelloOmniaFx.Worker\\omnia.service.ts</code>.</p></blockquote><p>Start debugging and activate the feature again.</p><p><strong>Remember to enable the worker again after debugging it.</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>omnia extensions scale {worker-service-id} --tenantid {tenant-id} --replicas 1	
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h1 id="step-4-test-the-feature" tabindex="-1"><a class="header-anchor" href="#step-4-test-the-feature" aria-hidden="true">#</a> Step 4. Test the feature</h1><p>The page <code>../SitePages/HelloOmniaFx.aspx</code> will be created on the SharePoint site that activated the feature.</p><p>Enjoy!</p><h1 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h1>`,32),d=a("See another example of SharePoint feature in source code "),k={href:"https://github.com/preciofishbone/OmniaFx/tree/master/src/Examples/Features/SharePointBasic",target:"_blank",rel:"noopener noreferrer"},m=a("here"),h=a("."),b=a("Learn more about feature "),x={href:"https://github.com/preciofishbone/OmniaFx/tree/master/docs/tutorials/omnia-learn/omnia-feature#omnia-feature",target:"_blank",rel:"noopener noreferrer"},f=a("here"),g=a("."),v=n("h1",{id:"next-part",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#next-part","aria-hidden":"true"},"#"),a(" Next Part")],-1),F=n("ul",null,[n("li",null,[n("a",{href:"../apply-localization#apply-localization"},"Apply localization")])],-1);function _(y,w){const s=p("ExternalLinkIcon");return o(),c(l,null,[u,n("ul",null,[n("li",null,[n("p",null,[d,n("a",k,[m,e(s)]),h])]),n("li",null,[n("p",null,[b,n("a",x,[f,e(s)]),g])])]),v,F],64)}var P=t(i,[["render",_],["__file","index.html.vue"]]);export{P as default};
