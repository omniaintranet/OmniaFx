import{_ as a,r as s,o,e as r,f as e,c as i,F as l,a as n,g as p}from"./app.a39ec552.js";const c={},d=e("h1",{id:"call-omnia-apis-externally",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#call-omnia-apis-externally","aria-hidden":"true"},"#"),n(" Call Omnia APIs externally")],-1),u=e("p",null,"Create an Omnia extension",-1),m={href:"https://github.com/preciofishbone/OmniaFx/tree/master/docs/tutorials/first-extension#build-your-first-extension-like-a-boss",target:"_blank",rel:"noopener noreferrer"},h=n("Lean how to create an Omnia extension"),b=p(`<li><p>Generate a client credentials (a pair of ClientId/ClientSecret) for that extension.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>omnia secrets add --tenantid {tenantid} --extensionid {extensionid} --name {name}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>e.g.</p><p>Run the below cmd to generate a secret for an extension on a tenant</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>omnia secrets add --tenantid 9b0c2314-1a84-471a-8032-b547a66dc89e --extensionid 6bf14e2e-5636-4da8-8e00-5cde9709ecee --name CredentialForUsingInPowerAutomate
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Then you must save the output information, this is the only time the secret will be show.</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;Name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;CredentialForUsingInPowerAutomate&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;ExtensionId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;6bf14e2e-5636-4da8-8e00-5cde9709ecee&quot;</span><span class="token punctuation">,</span> <span class="token comment">//ClientId</span>
    <span class="token property">&quot;Value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ysCKgSZ7CtIy6m6iSws6F3nOt9yPMQTi&quot;</span><span class="token punctuation">,</span> <span class="token comment">//ClientSecret</span>
    <span class="token property">&quot;CreatedBy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;CreatedAt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2020-10-05T04:38:34.0119016+00:00&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>Tip: For more information, visit <a href="%5B../../../cli#omnia-extensions-push%5D(https://github.com/preciofishbone/OmniaFx/tree/master/docs/cli#extension-secret-commands)">Extension Secret Commands</a></p></blockquote></li><li><p>Add the client credentials to http request headers to be able to call Omnia APIs.</p><table><thead><tr><th>Key</th><th>Value</th></tr></thead><tbody><tr><td>ClientId</td><td>extension id</td></tr><tr><td>ClientSecret</td><td>a secret of the extension</td></tr></tbody></table><blockquote><p>You should first call to your own Omnia extension APIs, then using other fx nuget. So that you can maintain the fx changes.</p></blockquote></li>`,2);function x(k,g){const t=s("ExternalLinkIcon");return o(),r(l,null,[d,e("ol",null,[e("li",null,[u,e("p",null,[e("a",m,[h,i(t)])])]),b])],64)}var q=a(c,[["render",x],["__file","index.html.vue"]]);export{q as default};
