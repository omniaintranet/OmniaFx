if("undefined"==typeof omniaLoader&&(globalThis.omniaLoader={}),omniaLoader["bb000000-0000-bbbb-0000-0000000000bb"]=omniaLoader["bb000000-0000-bbbb-0000-0000000000bb"]||{},omniaLoader["bb000000-0000-bbbb-0000-0000000000bb"]["cd27f805-572e-4f51-9c4a-f0a30668d07d"])throw new Error("Error, already loaded manifest cd27f805-572e-4f51-9c4a-f0a30668d07d with service id bb000000-0000-bbbb-0000-0000000000bb");omniaLoader["bb000000-0000-bbbb-0000-0000000000bb"]["cd27f805-572e-4f51-9c4a-f0a30668d07d"]=function(){(()=>{var t={"0dc97f56-0265-4585-a402-54a0f498ea9d":(t,e,o)=>{"use strict";o.r(e)}
//! <omnia-transform-resource path="0dc97f56-0265-4585-a402-54a0f498ea9d" />
,"./wwwroot/scripts/omnia.worker.vendor.js":function(t,e){(()=>{var t={"./node_modules/@microsoft/signalr/dist/webworker/signalr.js":function(t,e){var o,n;o=self,n=function(){return(()=>{var t={d:(e,o)=>{for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})}};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),t.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),t.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"t",{value:!0})};var e,o={};t.r(o),t.d(o,{AbortError:()=>i,DefaultHttpClient:()=>q,HttpClient:()=>d,HttpError:()=>n,HttpResponse:()=>u,HttpTransportType:()=>O,HubConnection:()=>j,HubConnectionBuilder:()=>Z,HubConnectionState:()=>W,JsonHubProtocol:()=>G,LogLevel:()=>e,MessageType:()=>H,NullLogger:()=>p,Subject:()=>L,TimeoutError:()=>r,TransferFormat:()=>_,VERSION:()=>g});class n extends Error{constructor(t,e){const o=new.target.prototype;super(`${t}: Status code '${e}'`),this.statusCode=e,this.__proto__=o}}class r extends Error{constructor(t="A timeout occurred."){const e=new.target.prototype;super(t),this.__proto__=e}}class i extends Error{constructor(t="An abort occurred."){const e=new.target.prototype;super(t),this.__proto__=e}}class s extends Error{constructor(t,e){const o=new.target.prototype;super(t),this.transport=e,this.errorType="UnsupportedTransportError",this.__proto__=o}}class a extends Error{constructor(t,e){const o=new.target.prototype;super(t),this.transport=e,this.errorType="DisabledTransportError",this.__proto__=o}}class c extends Error{constructor(t,e){const o=new.target.prototype;super(t),this.transport=e,this.errorType="FailedToStartTransportError",this.__proto__=o}}class h extends Error{constructor(t){const e=new.target.prototype;super(t),this.errorType="FailedToNegotiateWithServerError",this.__proto__=e}}class l extends Error{constructor(t,e){const o=new.target.prototype;super(t),this.innerErrors=e,this.__proto__=o}}class u{constructor(t,e,o){this.statusCode=t,this.statusText=e,this.content=o}}class d{get(t,e){return this.send({...e,method:"GET",url:t})}post(t,e){return this.send({...e,method:"POST",url:t})}delete(t,e){return this.send({...e,method:"DELETE",url:t})}getCookieString(t){return""}}!function(t){t[t.Trace=0]="Trace",t[t.Debug=1]="Debug",t[t.Information=2]="Information",t[t.Warning=3]="Warning",t[t.Error=4]="Error",t[t.Critical=5]="Critical",t[t.None=6]="None"}(e||(e={}));class p{constructor(){}log(t,e){}}p.instance=new p;const g="6.0.1";class f{static isRequired(t,e){if(null==t)throw new Error(`The '${e}' argument is required.`)}static isNotEmpty(t,e){if(!t||t.match(/^\s*$/))throw new Error(`The '${e}' argument should not be empty.`)}static isIn(t,e,o){if(!(t in e))throw new Error(`Unknown ${o} value: ${t}.`)}}class b{static get isBrowser(){return"object"==typeof window}static get isWebWorker(){return"object"==typeof self&&"importScripts"in self}static get isNode(){return!this.isBrowser&&!this.isWebWorker}}function w(t,e){let o="";return m(t)?(o=`Binary data of length ${t.byteLength}`,e&&(o+=`. Content: '${function(t){const e=new Uint8Array(t);let o="";return e.forEach((t=>{o+=`0x${t<16?"0":""}${t.toString(16)} `})),o.substr(0,o.length-1)}(t)}'`)):"string"==typeof t&&(o=`String data of length ${t.length}`,e&&(o+=`. Content: '${t}'`)),o}function m(t){return t&&"undefined"!=typeof ArrayBuffer&&(t instanceof ArrayBuffer||t.constructor&&"ArrayBuffer"===t.constructor.name)}async function y(t,o,n,r,i,s,a){let c={};if(i){const t=await i();t&&(c={Authorization:`Bearer ${t}`})}const[h,l]=S();c[h]=l,t.log(e.Trace,`(${o} transport) sending data. ${w(s,a.logMessageContent)}.`);const u=m(s)?"arraybuffer":"text",d=await n.post(r,{content:s,headers:{...c,...a.headers},responseType:u,timeout:a.timeout,withCredentials:a.withCredentials});t.log(e.Trace,`(${o} transport) request complete. Response status: ${d.statusCode}.`)}class v{constructor(t,e){this.i=t,this.h=e}dispose(){const t=this.i.observers.indexOf(this.h);t>-1&&this.i.observers.splice(t,1),0===this.i.observers.length&&this.i.cancelCallback&&this.i.cancelCallback().catch((t=>{}))}}class C{constructor(t){this.l=t,this.out=console}log(t,o){if(t>=this.l){const n=`[${(new Date).toISOString()}] ${e[t]}: ${o}`;switch(t){case e.Critical:case e.Error:this.out.error(n);break;case e.Warning:this.out.warn(n);break;case e.Information:this.out.info(n);break;default:this.out.log(n)}}}}function S(){let t="X-SignalR-User-Agent";return b.isNode&&(t="User-Agent"),[t,E(g,$(),b.isNode?"NodeJS":"Browser",T())]}function E(t,e,o,n){let r="Microsoft SignalR/";const i=t.split(".");return r+=`${i[0]}.${i[1]}`,r+=` (${t}; `,r+=e&&""!==e?`${e}; `:"Unknown OS; ",r+=`${o}`,r+=n?`; ${n}`:"; Unknown Runtime Version",r+=")",r}function $(){if(!b.isNode)return"";switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}}function T(){if(b.isNode)return process.versions.node}function k(t){return t.stack?t.stack:t.message?t.message:`${t}`}class P extends d{constructor(e){if(super(),this.u=e,"undefined"==typeof fetch){const t=require;this.p=new(t("tough-cookie").CookieJar),this.m=t("node-fetch"),this.m=t("fetch-cookie")(this.m,this.p)}else this.m=fetch.bind(function(){if("undefined"!=typeof globalThis)return globalThis;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t.g)return t.g;throw new Error("could not find global")}());if("undefined"==typeof AbortController){const t=require;this.v=t("abort-controller")}else this.v=AbortController}async send(t){if(t.abortSignal&&t.abortSignal.aborted)throw new i;if(!t.method)throw new Error("No method defined.");if(!t.url)throw new Error("No url defined.");const o=new this.v;let s;t.abortSignal&&(t.abortSignal.onabort=()=>{o.abort(),s=new i});let a,c=null;if(t.timeout){const n=t.timeout;c=setTimeout((()=>{o.abort(),this.u.log(e.Warning,"Timeout from HTTP request."),s=new r}),n)}try{a=await this.m(t.url,{body:t.content,cache:"no-cache",credentials:!0===t.withCredentials?"include":"same-origin",headers:{"Content-Type":"text/plain;charset=UTF-8","X-Requested-With":"XMLHttpRequest",...t.headers},method:t.method,mode:"cors",redirect:"follow",signal:o.signal})}catch(t){if(s)throw s;throw this.u.log(e.Warning,`Error from HTTP request. ${t}.`),t}finally{c&&clearTimeout(c),t.abortSignal&&(t.abortSignal.onabort=null)}if(!a.ok){const t=await I(a,"text");throw new n(t||a.statusText,a.status)}const h=I(a,t.responseType),l=await h;return new u(a.status,a.statusText,l)}getCookieString(t){let e="";return b.isNode&&this.p&&this.p.getCookies(t,((t,o)=>e=o.join("; "))),e}}function I(t,e){let o;switch(e){case"arraybuffer":o=t.arrayBuffer();break;case"text":o=t.text();break;case"blob":case"document":case"json":throw new Error(`${e} is not supported.`);default:o=t.text()}return o}class D extends d{constructor(t){super(),this.u=t}send(t){return t.abortSignal&&t.abortSignal.aborted?Promise.reject(new i):t.method?t.url?new Promise(((o,s)=>{const a=new XMLHttpRequest;a.open(t.method,t.url,!0),a.withCredentials=void 0===t.withCredentials||t.withCredentials,a.setRequestHeader("X-Requested-With","XMLHttpRequest"),a.setRequestHeader("Content-Type","text/plain;charset=UTF-8");const c=t.headers;c&&Object.keys(c).forEach((t=>{a.setRequestHeader(t,c[t])})),t.responseType&&(a.responseType=t.responseType),t.abortSignal&&(t.abortSignal.onabort=()=>{a.abort(),s(new i)}),t.timeout&&(a.timeout=t.timeout),a.onload=()=>{t.abortSignal&&(t.abortSignal.onabort=null),a.status>=200&&a.status<300?o(new u(a.status,a.statusText,a.response||a.responseText)):s(new n(a.response||a.responseText||a.statusText,a.status))},a.onerror=()=>{this.u.log(e.Warning,`Error from HTTP request. ${a.status}: ${a.statusText}.`),s(new n(a.statusText,a.status))},a.ontimeout=()=>{this.u.log(e.Warning,"Timeout from HTTP request."),s(new r)},a.send(t.content||"")})):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class q extends d{constructor(t){if(super(),"undefined"!=typeof fetch||b.isNode)this.$=new P(t);else{if("undefined"==typeof XMLHttpRequest)throw new Error("No usable HttpClient found.");this.$=new D(t)}}send(t){return t.abortSignal&&t.abortSignal.aborted?Promise.reject(new i):t.method?t.url?this.$.send(t):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(t){return this.$.getCookieString(t)}}class x{static write(t){return`${t}${x.RecordSeparator}`}static parse(t){if(t[t.length-1]!==x.RecordSeparator)throw new Error("Message is incomplete.");const e=t.split(x.RecordSeparator);return e.pop(),e}}x.RecordSeparatorCode=30,x.RecordSeparator=String.fromCharCode(x.RecordSeparatorCode);class R{writeHandshakeRequest(t){return x.write(JSON.stringify(t))}parseHandshakeResponse(t){let e,o;if(m(t)){const n=new Uint8Array(t),r=n.indexOf(x.RecordSeparatorCode);if(-1===r)throw new Error("Message is incomplete.");const i=r+1;e=String.fromCharCode.apply(null,Array.prototype.slice.call(n.slice(0,i))),o=n.byteLength>i?n.slice(i).buffer:null}else{const n=t,r=n.indexOf(x.RecordSeparator);if(-1===r)throw new Error("Message is incomplete.");const i=r+1;e=n.substring(0,i),o=n.length>i?n.substring(i):null}const n=x.parse(e),r=JSON.parse(n[0]);if(r.type)throw new Error("Expected a handshake response from the server.");return[o,r]}}var H,W;!function(t){t[t.Invocation=1]="Invocation",t[t.StreamItem=2]="StreamItem",t[t.Completion=3]="Completion",t[t.StreamInvocation=4]="StreamInvocation",t[t.CancelInvocation=5]="CancelInvocation",t[t.Ping=6]="Ping",t[t.Close=7]="Close"}(H||(H={}));class L{constructor(){this.observers=[]}next(t){for(const e of this.observers)e.next(t)}error(t){for(const e of this.observers)e.error&&e.error(t)}complete(){for(const t of this.observers)t.complete&&t.complete()}subscribe(t){return this.observers.push(t),new v(this,t)}}!function(t){t.Disconnected="Disconnected",t.Connecting="Connecting",t.Connected="Connected",t.Disconnecting="Disconnecting",t.Reconnecting="Reconnecting"}(W||(W={}));class j{constructor(t,o,n,r){this.C=0,this.S=()=>{this.u.log(e.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},f.isRequired(t,"connection"),f.isRequired(o,"logger"),f.isRequired(n,"protocol"),this.serverTimeoutInMilliseconds=3e4,this.keepAliveIntervalInMilliseconds=15e3,this.u=o,this.k=n,this.connection=t,this.P=r,this.T=new R,this.connection.onreceive=t=>this.I(t),this.connection.onclose=t=>this._(t),this.H={},this.D={},this.A=[],this.R=[],this.U=[],this.L=0,this.N=!1,this.q=W.Disconnected,this.M=!1,this.W=this.k.writeMessage({type:H.Ping})}static create(t,e,o,n){return new j(t,e,o,n)}get state(){return this.q}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(t){if(this.q!==W.Disconnected&&this.q!==W.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!t)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=t}start(){return this.O=this.j(),this.O}async j(){if(this.q!==W.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this.q=W.Connecting,this.u.log(e.Debug,"Starting HubConnection.");try{await this.F(),b.isBrowser&&document&&document.addEventListener("freeze",this.S),this.q=W.Connected,this.M=!0,this.u.log(e.Debug,"HubConnection connected successfully.")}catch(t){return this.q=W.Disconnected,this.u.log(e.Debug,`HubConnection failed to start successfully because of error '${t}'.`),Promise.reject(t)}}async F(){this.B=void 0,this.N=!1;const t=new Promise(((t,e)=>{this.X=t,this.J=e}));await this.connection.start(this.k.transferFormat);try{const o={protocol:this.k.name,version:this.k.version};if(this.u.log(e.Debug,"Sending handshake request."),await this.V(this.T.writeHandshakeRequest(o)),this.u.log(e.Information,`Using HubProtocol '${this.k.name}'.`),this.G(),this.K(),this.Y(),await t,this.B)throw this.B}catch(t){throw this.u.log(e.Debug,`Hub handshake failed with error '${t}' during start(). Stopping HubConnection.`),this.G(),this.Z(),await this.connection.stop(t),t}}async stop(){const t=this.O;this.tt=this.et(),await this.tt;try{await t}catch(t){}}et(t){return this.q===W.Disconnected?(this.u.log(e.Debug,`Call to HubConnection.stop(${t}) ignored because it is already in the disconnected state.`),Promise.resolve()):this.q===W.Disconnecting?(this.u.log(e.Debug,`Call to HttpConnection.stop(${t}) ignored because the connection is already in the disconnecting state.`),this.tt):(this.q=W.Disconnecting,this.u.log(e.Debug,"Stopping HubConnection."),this.st?(this.u.log(e.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this.st),this.st=void 0,this.nt(),Promise.resolve()):(this.G(),this.Z(),this.B=t||new Error("The connection was stopped before the hub handshake could complete."),this.connection.stop(t)))}stream(t,...e){const[o,n]=this.it(e),r=this.rt(t,e,n);let i;const s=new L;return s.cancelCallback=()=>{const t=this.ot(r.invocationId);return delete this.H[r.invocationId],i.then((()=>this.ht(t)))},this.H[r.invocationId]=(t,e)=>{e?s.error(e):t&&(t.type===H.Completion?t.error?s.error(new Error(t.error)):s.complete():s.next(t.item))},i=this.ht(r).catch((t=>{s.error(t),delete this.H[r.invocationId]})),this.ct(o,i),s}V(t){return this.Y(),this.connection.send(t)}ht(t){return this.V(this.k.writeMessage(t))}send(t,...e){const[o,n]=this.it(e),r=this.ht(this.at(t,e,!0,n));return this.ct(o,r),r}invoke(t,...e){const[o,n]=this.it(e),r=this.at(t,e,!1,n);return new Promise(((t,e)=>{this.H[r.invocationId]=(o,n)=>{n?e(n):o&&(o.type===H.Completion?o.error?e(new Error(o.error)):t(o.result):e(new Error(`Unexpected message type: ${o.type}`)))};const n=this.ht(r).catch((t=>{e(t),delete this.H[r.invocationId]}));this.ct(o,n)}))}on(t,e){t&&e&&(t=t.toLowerCase(),this.D[t]||(this.D[t]=[]),-1===this.D[t].indexOf(e)&&this.D[t].push(e))}off(t,e){if(!t)return;t=t.toLowerCase();const o=this.D[t];if(o)if(e){const n=o.indexOf(e);-1!==n&&(o.splice(n,1),0===o.length&&delete this.D[t])}else delete this.D[t]}onclose(t){t&&this.A.push(t)}onreconnecting(t){t&&this.R.push(t)}onreconnected(t){t&&this.U.push(t)}I(t){if(this.G(),this.N||(t=this.lt(t),this.N=!0),t){const o=this.k.parseMessages(t,this.u);for(const n of o)switch(n.type){case H.Invocation:this.ut(n);break;case H.StreamItem:case H.Completion:{const o=this.H[n.invocationId];if(o){n.type===H.Completion&&delete this.H[n.invocationId];try{o(n)}catch(t){this.u.log(e.Error,`Stream callback threw error: ${k(t)}`)}}break}case H.Ping:break;case H.Close:{this.u.log(e.Information,"Close message received from server.");const t=n.error?new Error("Server returned an error on close: "+n.error):void 0;!0===n.allowReconnect?this.connection.stop(t):this.tt=this.et(t);break}default:this.u.log(e.Warning,`Invalid message type: ${n.type}.`)}}this.K()}lt(t){let o,n;try{[n,o]=this.T.parseHandshakeResponse(t)}catch(t){const o="Error parsing handshake response: "+t;this.u.log(e.Error,o);const n=new Error(o);throw this.J(n),n}if(o.error){const t="Server returned handshake error: "+o.error;this.u.log(e.Error,t);const n=new Error(t);throw this.J(n),n}return this.u.log(e.Debug,"Server handshake complete."),this.X(),n}Y(){this.connection.features.inherentKeepAlive||(this.C=(new Date).getTime()+this.keepAliveIntervalInMilliseconds,this.Z())}K(){if(!(this.connection.features&&this.connection.features.inherentKeepAlive||(this.dt=setTimeout((()=>this.serverTimeout()),this.serverTimeoutInMilliseconds),void 0!==this.ft))){let t=this.C-(new Date).getTime();t<0&&(t=0),this.ft=setTimeout((async()=>{if(this.q===W.Connected)try{await this.V(this.W)}catch{this.Z()}}),t)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}ut(t){const o=this.D[t.target.toLowerCase()];if(o){try{o.forEach((e=>e.apply(this,t.arguments)))}catch(o){this.u.log(e.Error,`A callback for the method ${t.target.toLowerCase()} threw error '${o}'.`)}if(t.invocationId){const t="Server requested a response, which is not supported in this version of the client.";this.u.log(e.Error,t),this.tt=this.et(new Error(t))}}else this.u.log(e.Warning,`No client method with the name '${t.target}' found.`)}_(t){this.u.log(e.Debug,`HubConnection.connectionClosed(${t}) called while in state ${this.q}.`),this.B=this.B||t||new Error("The underlying connection was closed before the hub handshake could complete."),this.X&&this.X(),this.wt(t||new Error("Invocation canceled due to the underlying connection being closed.")),this.G(),this.Z(),this.q===W.Disconnecting?this.nt(t):this.q===W.Connected&&this.P?this.gt(t):this.q===W.Connected&&this.nt(t)}nt(t){if(this.M){this.q=W.Disconnected,this.M=!1,b.isBrowser&&document&&document.removeEventListener("freeze",this.S);try{this.A.forEach((e=>e.apply(this,[t])))}catch(o){this.u.log(e.Error,`An onclose callback called with error '${t}' threw error '${o}'.`)}}}async gt(t){const o=Date.now();let n=0,r=void 0!==t?t:new Error("Attempting to reconnect due to a unknown error."),i=this.yt(n++,0,r);if(null===i)return this.u.log(e.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),void this.nt(t);if(this.q=W.Reconnecting,t?this.u.log(e.Information,`Connection reconnecting because of error '${t}'.`):this.u.log(e.Information,"Connection reconnecting."),0!==this.R.length){try{this.R.forEach((e=>e.apply(this,[t])))}catch(o){this.u.log(e.Error,`An onreconnecting callback called with error '${t}' threw error '${o}'.`)}if(this.q!==W.Reconnecting)return void this.u.log(e.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.")}for(;null!==i;){if(this.u.log(e.Information,`Reconnect attempt number ${n} will start in ${i} ms.`),await new Promise((t=>{this.st=setTimeout(t,i)})),this.st=void 0,this.q!==W.Reconnecting)return void this.u.log(e.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");try{if(await this.F(),this.q=W.Connected,this.u.log(e.Information,"HubConnection reconnected successfully."),0!==this.U.length)try{this.U.forEach((t=>t.apply(this,[this.connection.connectionId])))}catch(t){this.u.log(e.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${t}'.`)}return}catch(t){if(this.u.log(e.Information,`Reconnect attempt failed because of error '${t}'.`),this.q!==W.Reconnecting)return this.u.log(e.Debug,`Connection moved to the '${this.q}' from the reconnecting state during reconnect attempt. Done reconnecting.`),void(this.q===W.Disconnecting&&this.nt());r=t instanceof Error?t:new Error(t.toString()),i=this.yt(n++,Date.now()-o,r)}}this.u.log(e.Information,`Reconnect retries have been exhausted after ${Date.now()-o} ms and ${n} failed attempts. Connection disconnecting.`),this.nt()}yt(t,o,n){try{return this.P.nextRetryDelayInMilliseconds({elapsedMilliseconds:o,previousRetryCount:t,retryReason:n})}catch(n){return this.u.log(e.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${t}, ${o}) threw error '${n}'.`),null}}wt(t){const o=this.H;this.H={},Object.keys(o).forEach((n=>{const r=o[n];try{r(null,t)}catch(o){this.u.log(e.Error,`Stream 'error' callback called with '${t}' threw error: ${k(o)}`)}}))}Z(){this.ft&&(clearTimeout(this.ft),this.ft=void 0)}G(){this.dt&&clearTimeout(this.dt)}at(t,e,o,n){if(o)return 0!==n.length?{arguments:e,streamIds:n,target:t,type:H.Invocation}:{arguments:e,target:t,type:H.Invocation};{const o=this.L;return this.L++,0!==n.length?{arguments:e,invocationId:o.toString(),streamIds:n,target:t,type:H.Invocation}:{arguments:e,invocationId:o.toString(),target:t,type:H.Invocation}}}ct(t,e){if(0!==t.length){e||(e=Promise.resolve());for(const o in t)t[o].subscribe({complete:()=>{e=e.then((()=>this.ht(this.bt(o))))},error:t=>{let n;n=t instanceof Error?t.message:t&&t.toString?t.toString():"Unknown error",e=e.then((()=>this.ht(this.bt(o,n))))},next:t=>{e=e.then((()=>this.ht(this.vt(o,t))))}})}}it(t){const e=[],o=[];for(let n=0;n<t.length;n++){const r=t[n];if(this.Et(r)){const i=this.L;this.L++,e[i]=r,o.push(i.toString()),t.splice(n,1)}}return[e,o]}Et(t){return t&&t.subscribe&&"function"==typeof t.subscribe}rt(t,e,o){const n=this.L;return this.L++,0!==o.length?{arguments:e,invocationId:n.toString(),streamIds:o,target:t,type:H.StreamInvocation}:{arguments:e,invocationId:n.toString(),target:t,type:H.StreamInvocation}}ot(t){return{invocationId:t,type:H.CancelInvocation}}vt(t,e){return{invocationId:t,item:e,type:H.StreamItem}}bt(t,e,o){return e?{error:e,invocationId:t,type:H.Completion}:{invocationId:t,result:o,type:H.Completion}}}const A=[0,2e3,1e4,3e4,null];class N{constructor(t){this.$t=void 0!==t?[...t,null]:A}nextRetryDelayInMilliseconds(t){return this.$t[t.previousRetryCount]}}class U{}var O,_;U.Authorization="Authorization",U.Cookie="Cookie",function(t){t[t.None=0]="None",t[t.WebSockets=1]="WebSockets",t[t.ServerSentEvents=2]="ServerSentEvents",t[t.LongPolling=4]="LongPolling"}(O||(O={})),function(t){t[t.Text=1]="Text",t[t.Binary=2]="Binary"}(_||(_={}));class M{constructor(){this.Ct=!1,this.onabort=null}abort(){this.Ct||(this.Ct=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this.Ct}}class B{constructor(t,e,o,n){this.$=t,this.St=e,this.u=o,this.kt=new M,this.Pt=n,this.Tt=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this.kt.aborted}async connect(t,o){if(f.isRequired(t,"url"),f.isRequired(o,"transferFormat"),f.isIn(o,_,"transferFormat"),this.It=t,this.u.log(e.Trace,"(LongPolling transport) Connecting."),o===_.Binary&&"undefined"!=typeof XMLHttpRequest&&"string"!=typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[r,i]=S(),s={[r]:i,...this.Pt.headers},a={abortSignal:this.kt.signal,headers:s,timeout:1e5,withCredentials:this.Pt.withCredentials};o===_.Binary&&(a.responseType="arraybuffer");const c=await this._t();this.Ht(a,c);const h=`${t}&_=${Date.now()}`;this.u.log(e.Trace,`(LongPolling transport) polling: ${h}.`);const l=await this.$.get(h,a);200!==l.statusCode?(this.u.log(e.Error,`(LongPolling transport) Unexpected response code: ${l.statusCode}.`),this.Dt=new n(l.statusText||"",l.statusCode),this.Tt=!1):this.Tt=!0,this.xt=this.At(this.It,a)}async _t(){return this.St?await this.St():null}Ht(t,e){t.headers||(t.headers={}),e?t.headers[U.Authorization]=`Bearer ${e}`:t.headers[U.Authorization]&&delete t.headers[U.Authorization]}async At(t,o){try{for(;this.Tt;){const i=await this._t();this.Ht(o,i);try{const r=`${t}&_=${Date.now()}`;this.u.log(e.Trace,`(LongPolling transport) polling: ${r}.`);const i=await this.$.get(r,o);204===i.statusCode?(this.u.log(e.Information,"(LongPolling transport) Poll terminated by server."),this.Tt=!1):200!==i.statusCode?(this.u.log(e.Error,`(LongPolling transport) Unexpected response code: ${i.statusCode}.`),this.Dt=new n(i.statusText||"",i.statusCode),this.Tt=!1):i.content?(this.u.log(e.Trace,`(LongPolling transport) data received. ${w(i.content,this.Pt.logMessageContent)}.`),this.onreceive&&this.onreceive(i.content)):this.u.log(e.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(t){this.Tt?t instanceof r?this.u.log(e.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this.Dt=t,this.Tt=!1):this.u.log(e.Trace,`(LongPolling transport) Poll errored after shutdown: ${t.message}`)}}}finally{this.u.log(e.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this.Rt()}}async send(t){return this.Tt?y(this.u,"LongPolling",this.$,this.It,this.St,t,this.Pt):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this.u.log(e.Trace,"(LongPolling transport) Stopping polling."),this.Tt=!1,this.kt.abort();try{await this.xt,this.u.log(e.Trace,`(LongPolling transport) sending DELETE request to ${this.It}.`);const t={},[o,n]=S();t[o]=n;const r={headers:{...t,...this.Pt.headers},timeout:this.Pt.timeout,withCredentials:this.Pt.withCredentials},i=await this._t();this.Ht(r,i),await this.$.delete(this.It,r),this.u.log(e.Trace,"(LongPolling transport) DELETE request sent.")}finally{this.u.log(e.Trace,"(LongPolling transport) Stop finished."),this.Rt()}}Rt(){if(this.onclose){let t="(LongPolling transport) Firing onclose event.";this.Dt&&(t+=" Error: "+this.Dt),this.u.log(e.Trace,t),this.onclose(this.Dt)}}}class F{constructor(t,e,o,n){this.$=t,this.St=e,this.u=o,this.Pt=n,this.onreceive=null,this.onclose=null}async connect(t,o){if(f.isRequired(t,"url"),f.isRequired(o,"transferFormat"),f.isIn(o,_,"transferFormat"),this.u.log(e.Trace,"(SSE transport) Connecting."),this.It=t,this.St){const e=await this.St();e&&(t+=(t.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(e)}`)}return new Promise(((n,r)=>{let i,s=!1;if(o===_.Text){if(b.isBrowser||b.isWebWorker)i=new this.Pt.EventSource(t,{withCredentials:this.Pt.withCredentials});else{const e=this.$.getCookieString(t),o={};o.Cookie=e;const[n,r]=S();o[n]=r,i=new this.Pt.EventSource(t,{withCredentials:this.Pt.withCredentials,headers:{...o,...this.Pt.headers}})}try{i.onmessage=t=>{if(this.onreceive)try{this.u.log(e.Trace,`(SSE transport) data received. ${w(t.data,this.Pt.logMessageContent)}.`),this.onreceive(t.data)}catch(t){return void this.Ut(t)}},i.onerror=t=>{s?this.Ut():r(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},i.onopen=()=>{this.u.log(e.Information,`SSE connected to ${this.It}`),this.Lt=i,s=!0,n()}}catch(t){return void r(t)}}else r(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"))}))}async send(t){return this.Lt?y(this.u,"SSE",this.$,this.It,this.St,t,this.Pt):Promise.reject(new Error("Cannot send until the transport is connected"))}stop(){return this.Ut(),Promise.resolve()}Ut(t){this.Lt&&(this.Lt.close(),this.Lt=void 0,this.onclose&&this.onclose(t))}}class J{constructor(t,e,o,n,r,i){this.u=o,this.St=e,this.Nt=n,this.qt=r,this.$=t,this.onreceive=null,this.onclose=null,this.Mt=i}async connect(t,o){if(f.isRequired(t,"url"),f.isRequired(o,"transferFormat"),f.isIn(o,_,"transferFormat"),this.u.log(e.Trace,"(WebSockets transport) Connecting."),this.St){const e=await this.St();e&&(t+=(t.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(e)}`)}return new Promise(((n,r)=>{let i;t=t.replace(/^http/,"ws");const s=this.$.getCookieString(t);let a=!1;if(b.isNode){const e={},[o,n]=S();e[o]=n,s&&(e[U.Cookie]=`${s}`),i=new this.qt(t,void 0,{headers:{...e,...this.Mt}})}i||(i=new this.qt(t)),o===_.Binary&&(i.binaryType="arraybuffer"),i.onopen=o=>{this.u.log(e.Information,`WebSocket connected to ${t}.`),this.Wt=i,a=!0,n()},i.onerror=t=>{let o=null;o="undefined"!=typeof ErrorEvent&&t instanceof ErrorEvent?t.error:"There was an error with the transport",this.u.log(e.Information,`(WebSockets transport) ${o}.`)},i.onmessage=t=>{if(this.u.log(e.Trace,`(WebSockets transport) data received. ${w(t.data,this.Nt)}.`),this.onreceive)try{this.onreceive(t.data)}catch(t){return void this.Ut(t)}},i.onclose=t=>{if(a)this.Ut(t);else{let e=null;e="undefined"!=typeof ErrorEvent&&t instanceof ErrorEvent?t.error:"WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",r(new Error(e))}}}))}send(t){return this.Wt&&this.Wt.readyState===this.qt.OPEN?(this.u.log(e.Trace,`(WebSockets transport) sending data. ${w(t,this.Nt)}.`),this.Wt.send(t),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this.Wt&&this.Ut(void 0),Promise.resolve()}Ut(t){this.Wt&&(this.Wt.onclose=()=>{},this.Wt.onmessage=()=>{},this.Wt.onerror=()=>{},this.Wt.close(),this.Wt=void 0),this.u.log(e.Trace,"(WebSockets transport) socket closed."),this.onclose&&(!this.Ot(t)||!1!==t.wasClean&&1e3===t.code?t instanceof Error?this.onclose(t):this.onclose():this.onclose(new Error(`WebSocket closed with status code: ${t.code} (${t.reason||"no reason given"}).`)))}Ot(t){return t&&"boolean"==typeof t.wasClean&&"number"==typeof t.code}}class X{constructor(t,o={}){var n;if(this.jt=()=>{},this.features={},this.Ft=1,f.isRequired(t,"url"),this.u=void 0===(n=o.logger)?new C(e.Information):null===n?p.instance:void 0!==n.log?n:new C(n),this.baseUrl=this.Bt(t),(o=o||{}).logMessageContent=void 0!==o.logMessageContent&&o.logMessageContent,"boolean"!=typeof o.withCredentials&&void 0!==o.withCredentials)throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");o.withCredentials=void 0===o.withCredentials||o.withCredentials,o.timeout=void 0===o.timeout?1e5:o.timeout;let r=null,i=null;if(b.isNode){const t=require;r=t("ws"),i=t("eventsource")}b.isNode||"undefined"==typeof WebSocket||o.WebSocket?b.isNode&&!o.WebSocket&&r&&(o.WebSocket=r):o.WebSocket=WebSocket,b.isNode||"undefined"==typeof EventSource||o.EventSource?b.isNode&&!o.EventSource&&void 0!==i&&(o.EventSource=i):o.EventSource=EventSource,this.$=o.httpClient||new q(this.u),this.q="Disconnected",this.M=!1,this.Pt=o,this.onreceive=null,this.onclose=null}async start(t){if(t=t||_.Binary,f.isIn(t,_,"transferFormat"),this.u.log(e.Debug,`Starting connection with transfer format '${_[t]}'.`),"Disconnected"!==this.q)return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this.q="Connecting",this.Xt=this.F(t),await this.Xt,"Disconnecting"===this.q){const t="Failed to start the HttpConnection before stop() was called.";return this.u.log(e.Error,t),await this.tt,Promise.reject(new Error(t))}if("Connected"!==this.q){const t="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this.u.log(e.Error,t),Promise.reject(new Error(t))}this.M=!0}send(t){return"Connected"!==this.q?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this.Jt||(this.Jt=new V(this.transport)),this.Jt.send(t))}async stop(t){return"Disconnected"===this.q?(this.u.log(e.Debug,`Call to HttpConnection.stop(${t}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):"Disconnecting"===this.q?(this.u.log(e.Debug,`Call to HttpConnection.stop(${t}) ignored because the connection is already in the disconnecting state.`),this.tt):(this.q="Disconnecting",this.tt=new Promise((t=>{this.jt=t})),await this.et(t),void await this.tt)}async et(t){this.zt=t;try{await this.Xt}catch(t){}if(this.transport){try{await this.transport.stop()}catch(t){this.u.log(e.Error,`HttpConnection.transport.stop() threw error '${t}'.`),this.Vt()}this.transport=void 0}else this.u.log(e.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async F(t){let o=this.baseUrl;this.St=this.Pt.accessTokenFactory;try{if(this.Pt.skipNegotiation){if(this.Pt.transport!==O.WebSockets)throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");this.transport=this.Gt(O.WebSockets),await this.Kt(o,t)}else{let e=null,n=0;do{if(e=await this.Qt(o),"Disconnecting"===this.q||"Disconnected"===this.q)throw new Error("The connection was stopped during negotiation.");if(e.error)throw new Error(e.error);if(e.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(e.url&&(o=e.url),e.accessToken){const t=e.accessToken;this.St=()=>t}n++}while(e.url&&n<100);if(100===n&&e.url)throw new Error("Negotiate redirection limit exceeded.");await this.Yt(o,this.Pt.transport,e,t)}this.transport instanceof B&&(this.features.inherentKeepAlive=!0),"Connecting"===this.q&&(this.u.log(e.Debug,"The HttpConnection connected successfully."),this.q="Connected")}catch(t){return this.u.log(e.Error,"Failed to start the connection: "+t),this.q="Disconnected",this.transport=void 0,this.jt(),Promise.reject(t)}}async Qt(t){const o={};if(this.St){const t=await this.St();t&&(o[U.Authorization]=`Bearer ${t}`)}const[r,i]=S();o[r]=i;const s=this.Zt(t);this.u.log(e.Debug,`Sending negotiation request: ${s}.`);try{const t=await this.$.post(s,{content:"",headers:{...o,...this.Pt.headers},timeout:this.Pt.timeout,withCredentials:this.Pt.withCredentials});if(200!==t.statusCode)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${t.statusCode}'`));const e=JSON.parse(t.content);return(!e.negotiateVersion||e.negotiateVersion<1)&&(e.connectionToken=e.connectionId),e}catch(t){let o="Failed to complete negotiation with the server: "+t;return t instanceof n&&404===t.statusCode&&(o+=" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this.u.log(e.Error,o),Promise.reject(new h(o))}}te(t,e){return e?t+(-1===t.indexOf("?")?"?":"&")+`id=${e}`:t}async Yt(t,o,n,r){let i=this.te(t,n.connectionToken);if(this.ee(o))return this.u.log(e.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=o,await this.Kt(i,r),void(this.connectionId=n.connectionId);const s=[],a=n.availableTransports||[];let h=n;for(const n of a){const a=this.se(n,o,r);if(a instanceof Error)s.push(`${n.transport} failed:`),s.push(a);else if(this.ee(a)){if(this.transport=a,!h){try{h=await this.Qt(t)}catch(t){return Promise.reject(t)}i=this.te(t,h.connectionToken)}try{return await this.Kt(i,r),void(this.connectionId=h.connectionId)}catch(t){if(this.u.log(e.Error,`Failed to start the transport '${n.transport}': ${t}`),h=void 0,s.push(new c(`${n.transport} failed: ${t}`,O[n.transport])),"Connecting"!==this.q){const t="Failed to select transport before stop() was called.";return this.u.log(e.Debug,t),Promise.reject(new Error(t))}}}}return s.length>0?Promise.reject(new l(`Unable to connect to the server with any of the available transports. ${s.join(" ")}`,s)):Promise.reject(new Error("None of the transports supported by the client are supported by the server."))}Gt(t){switch(t){case O.WebSockets:if(!this.Pt.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new J(this.$,this.St,this.u,this.Pt.logMessageContent,this.Pt.WebSocket,this.Pt.headers||{});case O.ServerSentEvents:if(!this.Pt.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new F(this.$,this.St,this.u,this.Pt);case O.LongPolling:return new B(this.$,this.St,this.u,this.Pt);default:throw new Error(`Unknown transport: ${t}.`)}}Kt(t,e){return this.transport.onreceive=this.onreceive,this.transport.onclose=t=>this.Vt(t),this.transport.connect(t,e)}se(t,o,n){const r=O[t.transport];if(null==r)return this.u.log(e.Debug,`Skipping transport '${t.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${t.transport}' because it is not supported by this client.`);if(!function(t,e){return!t||0!=(e&t)}(o,r))return this.u.log(e.Debug,`Skipping transport '${O[r]}' because it was disabled by the client.`),new a(`'${O[r]}' is disabled by the client.`,r);if(!(t.transferFormats.map((t=>_[t])).indexOf(n)>=0))return this.u.log(e.Debug,`Skipping transport '${O[r]}' because it does not support the requested transfer format '${_[n]}'.`),new Error(`'${O[r]}' does not support ${_[n]}.`);if(r===O.WebSockets&&!this.Pt.WebSocket||r===O.ServerSentEvents&&!this.Pt.EventSource)return this.u.log(e.Debug,`Skipping transport '${O[r]}' because it is not supported in your environment.'`),new s(`'${O[r]}' is not supported in your environment.`,r);this.u.log(e.Debug,`Selecting transport '${O[r]}'.`);try{return this.Gt(r)}catch(t){return t}}ee(t){return t&&"object"==typeof t&&"connect"in t}Vt(t){if(this.u.log(e.Debug,`HttpConnection.stopConnection(${t}) called while in state ${this.q}.`),this.transport=void 0,t=this.zt||t,this.zt=void 0,"Disconnected"!==this.q){if("Connecting"===this.q)throw this.u.log(e.Warning,`Call to HttpConnection.stopConnection(${t}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${t}) was called while the connection is still in the connecting state.`);if("Disconnecting"===this.q&&this.jt(),t?this.u.log(e.Error,`Connection disconnected with error '${t}'.`):this.u.log(e.Information,"Connection disconnected."),this.Jt&&(this.Jt.stop().catch((t=>{this.u.log(e.Error,`TransportSendQueue.stop() threw error '${t}'.`)})),this.Jt=void 0),this.connectionId=void 0,this.q="Disconnected",this.M){this.M=!1;try{this.onclose&&this.onclose(t)}catch(o){this.u.log(e.Error,`HttpConnection.onclose(${t}) threw error '${o}'.`)}}}else this.u.log(e.Debug,`Call to HttpConnection.stopConnection(${t}) was ignored because the connection is already in the disconnected state.`)}Bt(t){if(0===t.lastIndexOf("https://",0)||0===t.lastIndexOf("http://",0))return t;if(!b.isBrowser||!window.document)throw new Error(`Cannot resolve '${t}'.`);const o=window.document.createElement("a");return o.href=t,this.u.log(e.Information,`Normalizing '${t}' to '${o.href}'.`),o.href}Zt(t){const e=t.indexOf("?");let o=t.substring(0,-1===e?t.length:e);return"/"!==o[o.length-1]&&(o+="/"),o+="negotiate",o+=-1===e?"":t.substring(e),-1===o.indexOf("negotiateVersion")&&(o+=-1===e?"?":"&",o+="negotiateVersion="+this.Ft),o}}class V{constructor(t){this.ne=t,this.ie=[],this.re=!0,this.oe=new z,this.he=new z,this.ce=this.ae()}send(t){return this.le(t),this.he||(this.he=new z),this.he.promise}stop(){return this.re=!1,this.oe.resolve(),this.ce}le(t){if(this.ie.length&&typeof this.ie[0]!=typeof t)throw new Error(`Expected data to be of type ${typeof this.ie} but was of type ${typeof t}`);this.ie.push(t),this.oe.resolve()}async ae(){for(;;){if(await this.oe.promise,!this.re){this.he&&this.he.reject("Connection stopped.");break}this.oe=new z;const t=this.he;this.he=void 0;const e="string"==typeof this.ie[0]?this.ie.join(""):V.ue(this.ie);this.ie.length=0;try{await this.ne.send(e),t.resolve()}catch(e){t.reject(e)}}}static ue(t){const e=t.map((t=>t.byteLength)).reduce(((t,e)=>t+e)),o=new Uint8Array(e);let n=0;for(const e of t)o.set(new Uint8Array(e),n),n+=e.byteLength;return o.buffer}}class z{constructor(){this.promise=new Promise(((t,e)=>[this.de,this.fe]=[t,e]))}resolve(){this.de()}reject(t){this.fe(t)}}class G{constructor(){this.name="json",this.version=1,this.transferFormat=_.Text}parseMessages(t,o){if("string"!=typeof t)throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!t)return[];null===o&&(o=p.instance);const n=x.parse(t),r=[];for(const t of n){const n=JSON.parse(t);if("number"!=typeof n.type)throw new Error("Invalid payload.");switch(n.type){case H.Invocation:this.pe(n);break;case H.StreamItem:this.we(n);break;case H.Completion:this.ge(n);break;case H.Ping:case H.Close:break;default:o.log(e.Information,"Unknown message type '"+n.type+"' ignored.");continue}r.push(n)}return r}writeMessage(t){return x.write(JSON.stringify(t))}pe(t){this.me(t.target,"Invalid payload for Invocation message."),void 0!==t.invocationId&&this.me(t.invocationId,"Invalid payload for Invocation message.")}we(t){if(this.me(t.invocationId,"Invalid payload for StreamItem message."),void 0===t.item)throw new Error("Invalid payload for StreamItem message.")}ge(t){if(t.result&&t.error)throw new Error("Invalid payload for Completion message.");!t.result&&t.error&&this.me(t.error,"Invalid payload for Completion message."),this.me(t.invocationId,"Invalid payload for Completion message.")}me(t,e){if("string"!=typeof t||""===t)throw new Error(e)}}const K={trace:e.Trace,debug:e.Debug,info:e.Information,information:e.Information,warn:e.Warning,warning:e.Warning,error:e.Error,critical:e.Critical,none:e.None};class Z{configureLogging(t){if(f.isRequired(t,"logging"),void 0!==t.log)this.logger=t;else if("string"==typeof t){const e=function(t){const e=K[t.toLowerCase()];if(void 0!==e)return e;throw new Error(`Unknown log level: ${t}`)}(t);this.logger=new C(e)}else this.logger=new C(t);return this}withUrl(t,e){return f.isRequired(t,"url"),f.isNotEmpty(t,"url"),this.url=t,this.httpConnectionOptions="object"==typeof e?{...this.httpConnectionOptions,...e}:{...this.httpConnectionOptions,transport:e},this}withHubProtocol(t){return f.isRequired(t,"protocol"),this.protocol=t,this}withAutomaticReconnect(t){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return t?Array.isArray(t)?this.reconnectPolicy=new N(t):this.reconnectPolicy=t:this.reconnectPolicy=new N,this}build(){const t=this.httpConnectionOptions||{};if(void 0===t.logger&&(t.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const e=new X(this.url,t);return j.create(e,this.logger||p.instance,this.protocol||new G,this.reconnectPolicy)}}return Uint8Array.prototype.indexOf||Object.defineProperty(Uint8Array.prototype,"indexOf",{value:Array.prototype.indexOf,writable:!0}),Uint8Array.prototype.slice||Object.defineProperty(Uint8Array.prototype,"slice",{value:function(t,e){return new Uint8Array(Array.prototype.slice.call(this,t,e))},writable:!0}),Uint8Array.prototype.forEach||Object.defineProperty(Uint8Array.prototype,"forEach",{value:Array.prototype.forEach,writable:!0}),o})()},"object"==typeof e&&"object"==typeof t?t.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof e?e.signalR=n():o.signalR=n()},436:(t,e,o)=>{t.exports=o}},e={};var o=function o(n){var r=e[n];if(void 0!==r)return r.exports;var i=e[n]={exports:{}};return t[n].call(i.exports,i,i.exports,o),i.exports}(436);self.omniaWorkerVendor=o})()}};if("undefined"==typeof omniaWebpackJsonp&&(globalThis.omniaWebpackJsonp={}),globalThis.omniaWebpackJsonp["bb000000-0000-bbbb-0000-0000000000bb"]=globalThis.omniaWebpackJsonp["bb000000-0000-bbbb-0000-0000000000bb"]||{},globalThis.omniaWebpackJsonp["bb000000-0000-bbbb-0000-0000000000bb"]["cd27f805-572e-4f51-9c4a-f0a30668d07d"])throw new Error("Error, already loaded manifest cd27f805-572e-4f51-9c4a-f0a30668d07d with service id bb000000-0000-bbbb-0000-0000000000bb");globalThis.omniaWebpackJsonp["bb000000-0000-bbbb-0000-0000000000bb"]["cd27f805-572e-4f51-9c4a-f0a30668d07d"]=o;var e={};function o(n){var r=e[n];if(void 0!==r)return r.exports;var i=e[n]={exports:{}};return t[n].call(i.exports,i,i.exports,o),i.exports}o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o("./wwwroot/scripts/omnia.worker.vendor.js");o("0dc97f56-0265-4585-a402-54a0f498ea9d")})()},omniaLoader["bb000000-0000-bbbb-0000-0000000000bb"]["cd27f805-572e-4f51-9c4a-f0a30668d07d"]();