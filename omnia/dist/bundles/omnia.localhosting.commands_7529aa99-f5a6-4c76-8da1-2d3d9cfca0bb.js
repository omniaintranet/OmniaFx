if("undefined"==typeof omniaLoader&&(globalThis.omniaLoader={}),omniaLoader["bb000000-0000-bbbb-0000-0000000000bb"]=omniaLoader["bb000000-0000-bbbb-0000-0000000000bb"]||{},omniaLoader["bb000000-0000-bbbb-0000-0000000000bb"]["7529aa99-f5a6-4c76-8da1-2d3d9cfca0bb"])throw new Error("Error, already loaded manifest 7529aa99-f5a6-4c76-8da1-2d3d9cfca0bb with service id bb000000-0000-bbbb-0000-0000000000bb");omniaLoader["bb000000-0000-bbbb-0000-0000000000bb"]["7529aa99-f5a6-4c76-8da1-2d3d9cfca0bb"]=function(){(()=>{var e={"./client/fx/localhosting/commands/dns.js":(e,s,o)=>{"use strict";o.r(s);var a=o("ff061abc-7f0e-444b-b2b9-7ff71c5842c5"),n=o("d0a145a7-d1ef-4217-aa6f-85dd18c4231d"),r=o("97786ea9-4861-48bd-8a57-eae9bbdb4892");function t(e){switch(e[1]?e[1].toLowerCase():""){case"add":5===e.length?"--serviceId"!==e[3]?(r.ConsoleUIService.print({message:"Incorrect command, must be provide service id as below.",type:n.ConsoleMessageTypes.Error}),r.ConsoleUIService.print({message:"dns add https://localhost:port --serviceId xxxxxxxx-xxxx...xxxx",type:n.ConsoleMessageTypes.Info})):(s=e[2],o=e[4],a.LocalHostingService.instance.addServiceDns(o,s),r.ConsoleUIService.print({message:"Reloading page...",type:n.ConsoleMessageTypes.Warn}),window.location.reload()):(r.ConsoleUIService.print({message:"Incorrect command, must be match the format below.",type:n.ConsoleMessageTypes.Error}),r.ConsoleUIService.print({message:"dns add https://localhost:port --serviceId xxxxxxxx-xxxx...xxxx",type:n.ConsoleMessageTypes.Info}));break;case"remove":3===e.length?function(e){a.LocalHostingService.instance.removeServiceDns(e),r.ConsoleUIService.print({message:"Reloading page...",type:n.ConsoleMessageTypes.Warn}),window.location.reload()}(e[2]):(r.ConsoleUIService.print({message:"Incorrect command, must be match the format below.",type:n.ConsoleMessageTypes.Error}),r.ConsoleUIService.print({message:"dns remove https://localhost:port",type:n.ConsoleMessageTypes.Info}));break;case"--help":r.ConsoleUIService.print({message:"dns add https://localhost:port --serviceId xxxxxxxx-xxxx...xxxx",type:n.ConsoleMessageTypes.Info}),r.ConsoleUIService.print({message:"dns remove https://localhost:port",type:n.ConsoleMessageTypes.Info});break;default:r.ConsoleUIService.print({message:"Incorrect command, must be match the format below.",type:n.ConsoleMessageTypes.Error}),r.ConsoleUIService.print({message:"dns add https://localhost:port -serviceId xxxxxxxx-xxxx...xxxx",type:n.ConsoleMessageTypes.Info})}var s,o}r.ConsoleUIService.addCommand({name:"dns",description:"Set your local dns. Type dns --help for more info",action:t})},"./client/fx/localhosting/commands/serve.js":(e,s,o)=>{"use strict";o.r(s);var a=o("ff061abc-7f0e-444b-b2b9-7ff71c5842c5"),n=o("d0a145a7-d1ef-4217-aa6f-85dd18c4231d"),r=o("97786ea9-4861-48bd-8a57-eae9bbdb4892");function t(e){let s=e[1]?e[1].toLowerCase():"";switch(s){case"--list":!function(){const e=a.LocalHostingService.instance.getAllServed();e?Object.keys(e).forEach((s=>{r.ConsoleUIService.print({message:`${s} | ${JSON.stringify(e[s])}`,type:n.ConsoleMessageTypes.Good})})):r.ConsoleUIService.print({message:"No omnia service is being served from localhost",type:n.ConsoleMessageTypes.Warn})}();break;case"--stop":s=e[2]?e[2].toLowerCase():"",o=s,r.Utils.isNullOrEmpty(o)?(a.LocalHostingService.instance.stopAllServing(),r.ConsoleUIService.print({message:"Stop all local serving",type:n.ConsoleMessageTypes.Good}),window.location.reload()):a.LocalHostingService.instance.stopServe(o).then((e=>{e&&e.length>0&&(r.ConsoleUIService.print({message:`Stop serving from ${o}`,type:n.ConsoleMessageTypes.Good}),window.location.reload())})).catch((e=>{r.ConsoleUIService.print({message:`Error stopping serving from ${o}. ${JSON.stringify(e)}`,type:n.ConsoleMessageTypes.Error})}));break;case"--help":r.ConsoleUIService.print({message:"serve https://localhost:port",type:n.ConsoleMessageTypes.Info}),r.ConsoleUIService.print({message:"serve https://localhost:port --hmr",type:n.ConsoleMessageTypes.Info}),r.ConsoleUIService.print({message:"serve --list",type:n.ConsoleMessageTypes.Info}),r.ConsoleUIService.print({message:"serve --stop https://localhost:port",type:n.ConsoleMessageTypes.Info}),r.ConsoleUIService.print({message:"serve --stop",type:n.ConsoleMessageTypes.Info});break;default:!function(e){if(!e||0===e.length)return void r.ConsoleUIService.print('Required hosting address is missing. Try "serve <hosting-address>"');e=function(e,s){o=s,s=o.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");var o;const a=new RegExp("^["+s+"]+|["+s+"]+$","g");return e.replace(a,"")}(e,"/"),r.ConsoleUIService.print(`Connecting to ${e}...`),a.LocalHostingService.instance.startServe(e).then((s=>{r.ConsoleUIService.print({message:`Omnia service with ID "${s}" is now serving from ${e}`,type:n.ConsoleMessageTypes.Warn}),r.ConsoleUIService.print({message:"Reloading page...",type:n.ConsoleMessageTypes.Warn}),window.location.reload()})).catch((s=>{r.ConsoleUIService.print({message:`Cannot connect to ${e}. ${JSON.stringify(s)}`,type:n.ConsoleMessageTypes.Error})}))}(s)}var o}r.ConsoleUIService.addCommand({name:"serve",description:"Serving omnia service resources from localhost. Type serve --help for more info",action:t})},"./client/fx/localhosting/commands/swagger.js":(e,s,o)=>{"use strict";o.r(s);var a=o("5e618f4d-d014-414e-a681-89e34cbeda0f"),n=o("d0a145a7-d1ef-4217-aa6f-85dd18c4231d"),r=o("97786ea9-4861-48bd-8a57-eae9bbdb4892");const t=r.ServiceContainer.createInstance(a.ExtensionStore);function i(e){const s=e.slice(1).join(" ");switch(s){case"--list":l().then((e=>{e.forEach(((e,s)=>{r.ConsoleUIService.print({message:`${s+1}. ${e.title}`,type:n.ConsoleMessageTypes.Good}),r.ConsoleUIService.print({message:`${e.url}`,type:n.ConsoleMessageTypes.Info})}))}));break;case"--help":r.ConsoleUIService.print({message:"swagger 1",type:n.ConsoleMessageTypes.Info}),r.ConsoleUIService.print({message:"swagger 2",type:n.ConsoleMessageTypes.Info}),r.ConsoleUIService.print({message:"swagger 3",type:n.ConsoleMessageTypes.Info}),r.ConsoleUIService.print({message:"swagger Omnia WebApp",type:n.ConsoleMessageTypes.Info}),r.ConsoleUIService.print({message:"swagger bb000000-0000-bbbb-0000-0000000000bb",type:n.ConsoleMessageTypes.Info}),r.ConsoleUIService.print({message:"swagger --list",type:n.ConsoleMessageTypes.Info});break;default:!function(e){if(!e||0===e.trim().length)return void r.ConsoleUIService.print('Required webapp service is missing. Try "swagger --help" for more info');l().then((s=>{let o=null;o=isNaN(parseInt(e))?n.Guid.isValid(e)?s.find((s=>s.id==e.toLowerCase())):s.find((s=>s.title.toLowerCase()==e.toLowerCase())):s[parseInt(e)-1],o?(r.ConsoleUIService.print({message:`Opening ${o.title} swagger...`,type:n.ConsoleMessageTypes.System}),setTimeout((()=>{const e=window.open(o.url,"_blank");e&&e.focus()}),1e3)):r.ConsoleUIService.print('Required webapp service is not valid. Try "swagger --list" for listing all available webapp services')}))}(s)}}let c=null;function l(){return c||(c=new Promise(((e,s)=>{r.ConsoleUIService.print({message:"Loading available webapp services...",type:n.ConsoleMessageTypes.System});const o=[],a=window.omnia.serviceDnsMapping;t.actions.ensureLoadDeployedExtensions.dispatch().then((()=>{t.getters.deployedExtensions().forEach((e=>{e.serviceManifests.forEach((e=>{e.serviceDefinition.filter((e=>"WebAppService"==e.serviceType)).forEach((e=>{const s=a[e.id.toString().toLowerCase()];s&&o.push({id:e.id,title:e.title,url:`https://${s}/swagger`})}))}))})),e(o)}))}))),c}r.ConsoleUIService.addCommand({name:"swagger",description:"All available swagger. Type swagger --help for more info",action:i})},"5e618f4d-d014-414e-a681-89e34cbeda0f":(e,s,o)=>{e.exports=o("dll-reference md10")("5e618f4d-d014-414e-a681-89e34cbeda0f")},"97786ea9-4861-48bd-8a57-eae9bbdb4892":(e,s,o)=>{e.exports=o("dll-reference md9")("97786ea9-4861-48bd-8a57-eae9bbdb4892")},"d0a145a7-d1ef-4217-aa6f-85dd18c4231d":(e,s,o)=>{e.exports=o("dll-reference md9")("d0a145a7-d1ef-4217-aa6f-85dd18c4231d")},"ff061abc-7f0e-444b-b2b9-7ff71c5842c5":(e,s,o)=>{e.exports=o("dll-reference md9")("ff061abc-7f0e-444b-b2b9-7ff71c5842c5")},"dll-reference md9":e=>{"use strict";e.exports=omniaWebpackJsonp["bb000000-0000-bbbb-0000-0000000000bb"]["a2892051-fd9f-4056-ae8d-30d16d48417d"]},"dll-reference md10":e=>{"use strict";e.exports=omniaWebpackJsonp["bb000000-0000-bbbb-0000-0000000000bb"]["a5a89056-b5f5-475d-8518-a1f55090379d"]}};if("undefined"==typeof omniaWebpackJsonp&&(globalThis.omniaWebpackJsonp={}),globalThis.omniaWebpackJsonp["bb000000-0000-bbbb-0000-0000000000bb"]=globalThis.omniaWebpackJsonp["bb000000-0000-bbbb-0000-0000000000bb"]||{},globalThis.omniaWebpackJsonp["bb000000-0000-bbbb-0000-0000000000bb"]["7529aa99-f5a6-4c76-8da1-2d3d9cfca0bb"])throw new Error("Error, already loaded manifest 7529aa99-f5a6-4c76-8da1-2d3d9cfca0bb with service id bb000000-0000-bbbb-0000-0000000000bb");globalThis.omniaWebpackJsonp["bb000000-0000-bbbb-0000-0000000000bb"]["7529aa99-f5a6-4c76-8da1-2d3d9cfca0bb"]=o;var s={};function o(a){var n=s[a];if(void 0!==n)return n.exports;var r=s[a]={exports:{}};return e[a](r,r.exports,o),r.exports}o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o("./client/fx/localhosting/commands/serve.js"),o("./client/fx/localhosting/commands/dns.js");o("./client/fx/localhosting/commands/swagger.js")})()};